version: '3'

services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: npl-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - npl-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: npl-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - npl-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: npl-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - npl-network

  # 뉴스 수집기
  collector:
    build:
      context: .
      dockerfile: docker/collector.Dockerfile
    container_name: npl-collector
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=naver_news
      - KAFKA_TOPIC_NEWS=naver-news-raw
    networks:
      - npl-network

  # 텍스트 처리기
  text-processor:
    build:
      context: .
      dockerfile: docker/text-processor.Dockerfile
    container_name: npl-text-processor
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=naver_news
      - KAFKA_TOPIC_NEWS=naver-news-raw
      - KAFKA_TOPIC_PROCESSED=naver-news-processed
    networks:
      - npl-network

  # 토픽 처리기
  topic-processor:
    build:
      context: .
      dockerfile: docker/topic-processor.Dockerfile
    container_name: npl-topic-processor
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=naver_news
      - KAFKA_TOPIC_PROCESSED=naver-news-processed
      - KAFKA_TOPIC_TOPICS=naver-news-topics
    networks:
      - npl-network

  # 감정 분석 처리기
  sentiment-processor:
    build:
      context: .
      dockerfile: docker/sentiment-processor.Dockerfile
    container_name: npl-sentiment-processor
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=naver_news
      - KAFKA_TOPIC_TOPICS=naver-news-topics
      - KAFKA_TOPIC_ANALYZED=naver-news-analyzed
    networks:
      - npl-network

  # API 서버
  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    container_name: npl-api
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=naver_news
      - API_HOST=0.0.0.0
      - API_PORT=8000
    networks:
      - npl-network

  # 대시보드
  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard.Dockerfile
    container_name: npl-dashboard
    ports:
      - "8501:8501"
    depends_on:
      - api
    environment:
      - API_URL=http://api:8000
    networks:
      - npl-network

networks:
  npl-network:
    driver: bridge

volumes:
  mongodb_data: 