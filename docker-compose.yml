services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: npl-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - npl-network

  # 뉴스 수집기
  collector:
    build:
      context: .
      dockerfile: docker/collector.Dockerfile
    container_name: npl-collector
    depends_on:
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=news_db
    networks:
      - npl-network

  # S3 저장 관리자
  storage:
    build:
      context: .
      dockerfile: docker/storage.Dockerfile
    container_name: npl-storage
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - STORAGE_BATCH_SIZE=50
      - STORAGE_FLUSH_INTERVAL=60
      - STORAGE_MAX_WORKERS=5
    networks:
      - npl-network

  # 텍스트 처리기
  text-processor:
    build:
      context: .
      dockerfile: docker/text-processor.Dockerfile
    container_name: npl-text-processor
    depends_on:
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=news_db
    networks:
      - npl-network
      
  # 감정 분석 처리기
  sentiment-processor:
    build:
      context: .
      dockerfile: docker/sentiment-processor.Dockerfile
    container_name: npl-sentiment-processor
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    depends_on:
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://mongodb:27017
      - DATABASE_NAME=news_db
    networks:
      - npl-network

  # API 서버
  # api:
  #   build:
  #     context: .
  #     dockerfile: docker/api.Dockerfile
  #   container_name: npl-api
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - mongodb
  #   environment:
  #     - MONGODB_URI=mongodb://mongodb:27017
  #     - DATABASE_NAME=news_db
  #     - API_HOST=0.0.0.0
  #     - API_PORT=8000
  #   networks:
  #     - npl-network

  # 대시보드
  # dashboard:
  #   build:
  #     context: .
  #     dockerfile: docker/dashboard.Dockerfile
  #   container_name: npl-dashboard
  #   ports:
  #     - "8501:8501"
  #   depends_on:
  #     - api
  #   environment:
  #     - API_URL=http://api:8000
  #   networks:
  #     - npl-network

# networks:
#   npl-network:
#     driver: bridge
#     name: npl-network
networks:
  npl-network:
    external: true
    name: npl-network

volumes:
  mongodb_data: 