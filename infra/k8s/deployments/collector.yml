apiVersion: apps/v1
kind: Deployment
metadata:
  name: news-collector
  namespace: news-platform
  labels:
    app: news-processing
    component: collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: news-processing
      component: collector
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: news-processing
        component: collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: collector
        image: news-collector:v1.0.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-svc.news-platform.svc.cluster.local:9092"
        - name: MONGODB_URI
          value: "mongodb://mongodb-svc.news-platform.svc.cluster.local:27017"
        - name: DATABASE_NAME
          value: "news_db"
        - name: COLLECTOR_LOG_LEVEL
          value: "INFO"
        - name: MAX_SCRAPE_WORKERS
          value: "5"
        - name: REQUEST_TIMEOUT
          value: "30"
        volumeMounts:
        - name: collector-config
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        ports:
        - containerPort: 8080
          name: http
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
      volumes:
      - name: collector-config
        configMap:
          name: collector-config
      - name: tmp-volume
        emptyDir: {}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: news-collector-hpa
  namespace: news-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: news-collector
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60 